langdist$Percent.NonEnglish = langdist$Number.of.Students.with.Non.English.Home.Language / langdist$Total.Enrollment
langdist$Percent.ELL = langdist$Number.of.Students.with.Non.English.Home.Language / langdist$Total.Enrollment
View(langdist)
langdist <- merge(read.csv('../reviewversion/Languages-by-district.csv', na.strings = c("**","-")),
read.csv('../reviewversion/ELL-by-district.csv', na.strings = c("**","-")))
langdist <- merge(langdist, districts, by.x = "District.ID", by.y = "districtid")
langdist$Percent.NonEnglish = langdist$Number.of.Students.with.Non.English.Home.Language / langdist$Total.Enrollment
langdist$Percent.ELL = langdist$Number.of.ELL.Students / langdist$Total.Enrollment
View(langdist)
langdist <- merge(read.csv('../reviewversion/Languages-by-district.csv', na.strings = c("**","-")),
read.csv('../reviewversion/ELL-by-district.csv', na.strings = c("**","-")))
langdist <- merge(langdist, districts, by.x = "District.ID", by.y = "districtid")
langdist$Percent.NonEnglish = round(langdist$Number.of.Students.with.Non.English.Home.Language / langdist$Total.Enrollment,1)
langdist$Percent.ELL = round(langdist$Number.of.ELL.Students / langdist$Total.Enrollment,1)
View(langdist)
#Languages by district
langdist <- merge(read.csv('../reviewversion/Languages-by-district.csv', na.strings = c("**","-")),
read.csv('../reviewversion/ELL-by-district.csv', na.strings = c("**","-")))
langdist <- merge(langdist, districts, by.x = "District.ID", by.y = "districtid")
langdist$Percent.NonEnglish = round(langdist$Number.of.Students.with.Non.English.Home.Language / langdist$Total.Enrollment,1) * 100
langdist$Percent.ELL = round(langdist$Number.of.ELL.Students / langdist$Total.Enrollment,1) * 100
View(langdist)
langdist <- merge(read.csv('../reviewversion/Languages-by-district.csv', na.strings = c("**","-")),
read.csv('../reviewversion/ELL-by-district.csv', na.strings = c("**","-")))
langdist <- merge(langdist, districts, by.x = "District.ID", by.y = "districtid")
langdist$Percent.NonEnglish = round((langdist$Number.of.Students.with.Non.English.Home.Language / langdist$Total.Enrollment)*100,1)
langdist$Percent.ELL = round((langdist$Number.of.ELL.Students / langdist$Total.Enrollment) * 100,1)
View(langdist)
#Languages by district
langdist <- merge(read.csv('../reviewversion/Languages-by-district.csv', na.strings = c("**","-")),
read.csv('../reviewversion/ELL-by-district.csv', na.strings = c("**","-")))
langdist <- merge(langdist, districts, by.x = "District.ID", by.y = "districtid")
langdist$Percent.NonEnglish = round((langdist$Number.of.Students.with.Non.English.Home.Language / langdist$Total.Enrollment)*100,1)
write.csv(langdist,'../rawdata/percent-ELL-non-English.csv',row.names = F)
names(langdist)
ddply(langdist,.(School.Year),
summarise,
Percent.NonEnglish = weighted.mean(Percent.NonEnglish,Total.Enrollment, na.rm = T),
Percentage.ELL = weighted.mean(Percentage.ELL,Total.Enrollment, na.rm = T))
langdist <- merge(read.csv('../reviewversion/Languages-by-district.csv', na.strings = c("**","-")),
read.csv('../reviewversion/ELL-by-district.csv', na.strings = c("**","-")))
langdist <- merge(langdist, districts, by.x = "District.ID", by.y = "districtid")
langdist$Percent.NonEnglish = round((langdist$Number.of.Students.with.Non.English.Home.Language / langdist$Total.Enrollment)*100,1)
ddply(langdist,.(School.Year),
summarise,
Percent.NonEnglish = weighted.mean(Percent.NonEnglish,Total.Enrollment, na.rm = T),
Percentage.ELL = weighted.mean(Percentage.ELL,Total.Enrollment, na.rm = T))
qplot(data = ddply(langdist,.(School.Year),
summarise,
Percent.NonEnglish = weighted.mean(Percent.NonEnglish,Total.Enrollment, na.rm = T),
Percentage.ELL = weighted.mean(Percentage.ELL,Total.Enrollment, na.rm = T)),
x = School.Year,
y = Percentage.ELL, geom = "line")
qplot(data = ddply(langdist,.(School.Year),
summarise,
Percent.NonEnglish = weighted.mean(Percent.NonEnglish,Total.Enrollment, na.rm = T),
Percentage.ELL = weighted.mean(Percentage.ELL,Total.Enrollment, na.rm = T)),
x = School.Year,
y = Percentage.ELL, geom = "line",
group = "")
ggplot(data = ddply(langdist,.(School.Year),
summarise,
Percent.NonEnglish = weighted.mean(Percent.NonEnglish,Total.Enrollment, na.rm = T),
Percentage.ELL = weighted.mean(Percentage.ELL,Total.Enrollment, na.rm = T))) +
geom_line(aes(x = School.Year, y = Percentage.ELL, group = ""))
ggplot(data = ddply(langdist,.(School.Year),
summarise,
Percent.NonEnglish = weighted.mean(Percent.NonEnglish,Total.Enrollment, na.rm = T),
Percentage.ELL = weighted.mean(Percentage.ELL,Total.Enrollment, na.rm = T))) +
geom_line(aes(x = School.Year, y = Percentage.ELL, group = "")) +
geom_line(aes(x = School.Year, y = Percentage.NonEnglish, group = ""))
ggplot(data = ddply(langdist,.(School.Year),
summarise,
Percent.NonEnglish = weighted.mean(Percent.NonEnglish,Total.Enrollment, na.rm = T),
Percentage.ELL = weighted.mean(Percentage.ELL,Total.Enrollment, na.rm = T))) +
geom_line(aes(x = School.Year, y = Percentage.ELL, group = "")) +
geom_line(aes(x = School.Year, y = Percent.NonEnglish, group = ""))
ggplot(data = ddply(langdist,.(School.Year),
summarise,
Percent.NonEnglish = weighted.mean(Percent.NonEnglish,Total.Enrollment, na.rm = T),
Percentage.ELL = weighted.mean(Percentage.ELL,Total.Enrollment, na.rm = T))) +
geom_line(aes(x = School.Year, y = Percentage.ELL, group = "")) +
geom_line(aes(x = School.Year, y = Percent.NonEnglish, group = "")) +
ylim(0,20) +
theme_minimal()
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL)
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guide_legend()
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
#  theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guide_legend()
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
#  scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guide_legend()
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
#  labs(x = NULL, y = NULL) +
guide_legend()
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(guide_legend(ncol = 1))
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1))
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1), title = NULL)
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1), title = "")
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1), name = "")
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1), name = NULL)
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1, name = NULL))
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1, name = ""))
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1, title = ""))
ggplot(data = subset(cmt_subgroups_region, Category == "Special Education"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1, title = NULL))
getwd()
slidify('index.Rmd')
ggplot(data = subset(cmt_subgroups_region, Category =="Free / Reduced Price Lunch"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1, title = NULL))
ggplot(data = subset(cmt_subgroups_region, Category == "Gender"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1, title = NULL))
ggplot(data = subset(cmt_subgroups_region, Category == "Race / ethnicity" &
Status != "Two or more races"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = NULL) +
guides(colour = guide_legend(ncol = 1, title = NULL))
ggplot(data = subset(cmt_subgroups_region, Category == "ELL"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = c(202, 217, 235, 279), size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
scale_y_continuous(breaks = c(202,217,235,279), lim = c(180,300)) +
scale_colour_brewer(palette = "Dark2") +
theme_minimal() +
theme(legend.position = "top") +
labs(x = NULL, y = "Average scale score, 3rd grade reading")
guides(colour = guide_legend(ncol = 1, title = NULL))
slidify('index.Rmd')
slidify('index.Rmd')
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Towngroup)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "Types of towns") +
theme_minimal(base_size = 16)
towns <- read.csv("../regionalreport/data/hartford-towns.csv")
towns$Towngroup <- factor(towns$Towngroup, levels = c("Hartford",
"Urban periphery",
"Suburban / rural"))
CTTowns <- readShapeSpatial(fn="../townshp/wgs84/townct_37800_0000_2010_s100_census_1_shp_wgs84")
#Fortify and order the CTTowns to allow ggmap to use that
CTTowns <- fortify(CTTowns, region = "NAME10")
#Merge map and data
choropleth=merge(CTTowns, towns, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Towngroup)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "Types of towns") +
theme_minimal(base_size = 16)
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Towngroup)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Blues", name = "Types of towns") +
theme_minimal(base_size = 16)
slidify('index.Rmd')
unique(hsgrad$School.Name)
levels(hsgrad$School.Name)
length(unique(hsgrad$School.Name))
subset(hsgrad, Category == "Free / Reduced Price Lunch")
ddply(subset(hsgrad, Category == "Free / Reduced Price Lunch"),.(School.Year, Category, Status),summarise,x = max(X4.Year.Graduation..Rate)
)
#Filter to just regional districts
districts <- read.csv("../regionalreport/data/hartford-districts.csv")
hsgrad <- subset(hsgrad, hsgrad$District.Name %in% levels(districts$district))
hsgrad$District.Name <- factor(hsgrad$District.Name)
hsgrad_agg <- ddply(hsgrad, .(Category, Status), summarise,
mean = mean(X4.Year.Graduation..Rate, na.rm = T) / 100,
percent95 = quantile(X4.Year.Graduation..Rate, 0.95, na.rm = T)/ 100,
percent05 = quantile(X4.Year.Graduation..Rate, 0.05, na.rm = T) / 100)
hsgrad_agg$Status <- reorder(hsgrad_agg$Status, hsgrad_agg$mean)
#Remove the groups we don't want / need to report
hsgrad_agg <- subset(hsgrad_agg, !(Status %in% c("Two or More Races",
"American Indian",
"Hawaiian or Pacific Islander",
"Non-Hispanic",
"Non-ELL",
"Non-Special Education",
"Not Eligible For Lunch",
"Eligible For Lunch")))
#Show variation for region
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_errorbar(aes(ymin = percent05, ymax = percent95), width = 0.2) +
coord_flip() +
labs(title = '4-year graduation rate (average, + 5th / 95th percentiles)', y = NULL,
x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal()
hsgrad_agg <- ddply(hsgrad, .(Category, Status), summarise,
mean = mean(X4.Year.Graduation..Rate, na.rm = T) / 100,
percent95 = quantile(X4.Year.Graduation..Rate, 0.75, na.rm = T)/ 100,
percent05 = quantile(X4.Year.Graduation..Rate, 0.25, na.rm = T) / 100)
hsgrad_agg$Status <- reorder(hsgrad_agg$Status, hsgrad_agg$mean)
#Remove the groups we don't want / need to report
hsgrad_agg <- subset(hsgrad_agg, !(Status %in% c("Two or More Races",
"American Indian",
"Hawaiian or Pacific Islander",
"Non-Hispanic",
"Non-ELL",
"Non-Special Education",
"Not Eligible For Lunch")))
#Show variation for region
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_errorbar(aes(ymin = percent05, ymax = percent95), width = 0.2) +
coord_flip() +
labs(title = '4-year graduation rate (average, + 5th / 95th percentiles)', y = NULL,
x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal()
hsgrad_agg <- ddply(hsgrad, .(Category, Status), summarise,
mean = mean(X4.Year.Graduation..Rate, na.rm = T) / 100,
percent95 = quantile(X4.Year.Graduation..Rate, 0.95, na.rm = T)/ 100,
percent05 = quantile(X4.Year.Graduation..Rate, 0.05, na.rm = T) / 100)
hsgrad_agg <- subset(hsgrad_agg, !(Status %in% c("Two or More Races",
"American Indian",
"Hawaiian or Pacific Islander",
"Non-Hispanic",
"Non-ELL",
"Non-Special Education",
"Not Eligible For Lunch",
"Eligible For Lunch")))
write.csv(hsgrad_agg, "../rawdata/hsgraduation.csv", row.names = FALSE)
write.csv(hsgrad_agg, "../rawdata/hsgraduation.csv", row.names = FALSE)
hsgrad <- subset(hsgrad, hsgrad$District.Name %in% levels(districts$district))
hsgrad$District.Name <- factor(hsgrad$District.Name)
hsgrad_agg <- ddply(hsgrad, .(Category, Status), summarise,
mean = mean(X4.Year.Graduation..Rate, na.rm = T) / 100,
percent95 = quantile(X4.Year.Graduation..Rate, 0.95, na.rm = T)/ 100,
percent05 = quantile(X4.Year.Graduation..Rate, 0.05, na.rm = T) / 100,
percent75 = quantile(X4.Year.Graduation..Rate, 0.75, na.rm = T)/ 100,
percent25 = quantile(X4.Year.Graduation..Rate, 0.25, na.rm = T)/ 100)
hsgrad_agg$Status <- reorder(hsgrad_agg$Status, hsgrad_agg$mean)
#Remove the groups we don't want / need to report
hsgrad_agg <- subset(hsgrad_agg, !(Status %in% c("Two or More Races",
"American Indian",
"Hawaiian or Pacific Islander",
"Non-Hispanic",
"Non-ELL",
"Non-Special Education",
"Not Eligible For Lunch",
"Eligible For Lunch")))
#Show variation for region
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_errorbar(aes(ymin = percent50, ymax = percent75), width = 0.2) +
coord_flip() +
labs(title = '4-year graduation rate (average, + 5th / 95th percentiles)', y = NULL,
x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal()
write.csv(hsgrad_agg, "../rawdata/hsgraduation.csv", row.names = FALSE)
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_errorbar(aes(ymin = percent25, ymax = percent75), width = 0.2) +
coord_flip() +
labs(title = '4-year graduation rate (average, + 5th / 95th percentiles)', y = NULL,
x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal()
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_errorbar(aes(ymin = percent25, ymax = percent75), width = 0.2, colour = "blue", alpha = 0.1) +
coord_flip() +
labs(title = '4-year graduation rate (average, + 5th / 95th percentiles)', y = NULL,
x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal()
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_linerange(aes(ymin = percent25, ymax = percent75), width = 0.2, colour = "blue", alpha = 0.2) +
coord_flip() +
labs(title = '4-year graduation rate (average, + 5th / 95th percentiles)', y = NULL,
x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal()
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_linerange(aes(ymin = percent25, ymax = percent75), width = 0.2, colour = "blue", alpha = 0.2, size = 4) +
coord_flip() +
labs(title = '4-year graduation rate (average, + 5th / 95th percentiles)', y = NULL,
x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal()
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_linerange(aes(ymin = percent25, ymax = percent75), width = 0.2,
colour = "blue", alpha = 0.1, size = 4) +
coord_flip() +
labs(title = '4-year graduation rate (average, + 5th / 95th percentiles)', y = NULL,
x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal()
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_linerange(aes(ymin = percent25, ymax = percent75), width = 0.2,
colour = "blue", alpha = 0.1, size = 4) +
coord_flip() +
labs(title = '4-year graduation rate (average + interquartile range)', y = NULL,
x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal()
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_linerange(aes(ymin = percent25, ymax = percent75), width = 0.2,
colour = "blue", alpha = 0.1, size = 4) +
coord_flip() +
labs(title = '4-year graduation rate (average + interquartile range)', y = NULL,
x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal(base_size = 16)
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_linerange(aes(ymin = percent25, ymax = percent75), width = 0.2,
colour = "blue", alpha = 0.1, size = 4) +
coord_flip() +
labs(x = '4-year graduation rate (average + interquartile range)', y = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal(base_size = 16)
ggplot(data = hsgrad_agg, aes(y = mean, x = Status)) +
geom_point() +
geom_linerange(aes(ymin = percent25, ymax = percent75), width = 0.2,
colour = "blue", alpha = 0.1, size = 4) +
coord_flip() +
labs(y = '4-year graduation rate (average + interquartile range)', x = NULL) +
scale_y_continuous(labels = percent, lim = c(0,1)) +
theme_minimal(base_size = 16)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
