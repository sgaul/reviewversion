geom_line(aes(group = Towngroup, colour = Towngroup)) +
scale_y_continuous(labels = comma, limits = c(0,41000)) +
labs(x = "Year", y = 'Population', title = 'Population in poverty') +
theme(axis.text.x = element_text(size = rel(1.5))) +
theme(axis.text.y = element_text(size = rel(1.5))) +
theme_minimal()
ggplot(aes(y = population.under.poverty,
x = period), data = subset(gh_sum,period >= 1970)) +
geom_line(aes(group = Towngroup, colour = Towngroup)) +
scale_y_continuous(labels = comma, limits = c(0,41000)) +
labs(x = "Year", y = 'Population', title = 'Population in poverty') +
theme(axis.text.x = element_text(size = rel(1.5))) +
theme(axis.text.y = element_text(size = rel(1.5)))
ggplot(aes(y = population.under.poverty,
x = period), data = subset(gh_sum,period >= 1970)) +
geom_line(aes(group = Towngroup, colour = Towngroup)) +
scale_y_continuous(labels = comma, limits = c(0,41000)) +
labs(x = "Year", y = 'Population', title = 'Population in poverty') +
theme(axis.text.x = element_text(size = rel(1.5))) +
theme(axis.text.y = element_text(size = rel(1.5))) +
theme_minimal(base_size = 14)
slidify('index.Rmd')
ggplot(data = ddply(merge(subset(enroll, variable == "Total"), towns,
by.x = "Resident.Town",by.y = "Town"),
.(Towngroup, School.Type, School.Year),summarise, x = sum(x)),
aes(x = School.Year, y = x, group = School.Type, fill = School.Type)) +
geom_line(aes(group = School.Type, colour = School.Type)) +
geom_point(aes(group = School.Type, colour = School.Type, shape = School.Type)) +
#  geom_bar(aes(order = as.numeric(School.Type)), stat = 'identity', position = "stack") +
scale_y_continuous(labels = comma) +
scale_x_discrete(breaks = c("2006-07","2008-09","2010-11")) +
labs(x = NULL, y = NULL) +
#  scale_fill_brewer(palette = "Greys") +
theme_minimal(base_size = 14) +
facet_wrap(~ Towngroup, ncol = 3)
totalcrime <- read.csv("../crime/totalcrime.csv")
ggplot(data = subset(totalcrime[!is.na(totalcrime$Total.crime.Rate),],
Town %in% c("Bridgeport","Hartford","New Haven","New Britain","Stamford","Waterbury")),
aes(x = as.numeric(Year), y = Total.crime.Rate)) +
geom_line(aes(group = Town, colour = Town), size = 1) +
geom_point(aes(group = Town, colour = Town)) +
labs(x = NULL, y = "Crime rate by town (per 100K residents)") +
scale_x_continuous(breaks = c(1998,2004,2010)) +
theme_minimal(base_size = 14)
hsgrad$Category <- reorder(hsgrad$Category, hsgrad$X4.Year.Graduation.Rate)
ggplot(data = subset(hsgrad, !(Category %in% c("All Students")))) +
geom_boxplot(aes(x = Category, y = X4.Year.Graduation.Rate)) +
coord_flip() +
ylim(50,100) +
theme_minimal(base_size = 14) +
labs(x = NULL, y = "Four-year graduation rate")
names(hsgrad)
ggplot(data = subset(hsgrad, !(Category %in% c("All Students")))) +
geom_point(aes(x = Category, y = X4.Year.Graduation.Rate)) +
coord_flip() +
ylim(50,100) +
theme_minimal(base_size = 14) +
labs(x = NULL, y = "Four-year graduation rate")
ggplot(data = subset(hsgrad, !(Category %in% c("All Students")))) +
geom_point(aes(x = Category, y = X4.Year.Graduation.Rate)) +
coord_flip() +
ylim(0,100) +
theme_minimal(base_size = 14) +
labs(x = NULL, y = "Four-year graduation rate")
ggplot(data = subset(hsgrad, !(Category %in% c("All Students","American Indian")))) +
geom_point(aes(x = Category, y = X4.Year.Graduation.Rate)) +
coord_flip() +
ylim(0,100) +
theme_minimal(base_size = 14) +
labs(x = NULL, y = "Four-year graduation rate by school")
ggplot() +
geom_line(data = subset(gh_test, period >= 1900 & period =< 2010),
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup))
ggplot() +
geom_line(data = subset(gh_test, period >= 1900 & period < 2010),
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup))
ggplot() +
geom_line(data = subset(gh_test, period >= 1900 & period < 2010),
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
theme_minimal(base_size = 14) +
ylim(0,350000) +
labs(x = "Year", y = "Population")
ggplot() +
geom_line(data = subset(gh_test, period >= 1900 & period < 2010),
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
theme_minimal(base_size = 14) +
ylim(0,500000) +
labs(x = "Year", y = "Population")
ggplot() +
geom_line(data = subset(gh_test, period >= 1900 & period < 2010),
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
theme_minimal(base_size = 14) +
scale_y_continuous(labels = comma) +
ylim(0,500000) +
labs(x = "Year", y = "Population")
ggplot() +
geom_line(data = subset(gh_test, period >= 1900 & period < 2010),
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
theme_minimal(base_size = 14) +
scale_y_continuous(labels = comma, lims = c(0,500000)) +
labs(x = "Year", y = "Population")
ggplot() +
geom_line(data = subset(gh_test, period >= 1900 & period < 2010),
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
theme_minimal(base_size = 14) +
scale_y_continuous(labels = comma, lim = c(0,500000)) +
labs(x = "Year", y = "Population")
ggplot() +
geom_line(data = subset(gh_test, period >= 1900 & period < 2010),
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
geom_line(data = subset(gh_test, period >= 2010), linetype = 'dotted',
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
theme_minimal(base_size = 14) +
scale_y_continuous(labels = comma, lim = c(0,500000)) +
labs(x = "Year", y = "Population")
ggplot() +
geom_line(data = subset(gh_test, period >= 1900 & period <= 2010),
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
geom_line(data = subset(gh_test, period >= 2010), linetype = 'dotted',
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
theme_minimal(base_size = 14) +
scale_y_continuous(labels = comma, lim = c(0,500000)) +
labs(x = "Year", y = "Population")
ggplot() +
geom_line(data = subset(gh_test, period >= 1900 & period <= 2010), size = 1,
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
geom_line(data = subset(gh_test, period >= 2010), linetype = 'dotted', size = 1,
aes(x = period, y = sumpop, group = Towngroup, colour = Towngroup)) +
theme_minimal(base_size = 14) +
scale_y_continuous(labels = comma, lim = c(0,500000)) +
labs(x = "Year", y = "Population")
slidify('index.Rmd')
ddply(hsgrad, .(Category), summarise,
X4.Year.Graduation.Rate = weighted.mean(X4.Year.Graduation.Rate, Enrollment, na.rm = TRUE))
names(hsgrad)
hsenroll <- read.csv("../hsgraduation/Race_and_Gender_by_district_2011_for_N_5_suppressed.csv")
hsenroll <- melt(hsenroll, id.vars = c("Inst","dist","District.Name"))
hsenroll$variable <- gsub(pattern = "All.Students", replacement = "All Students", hsenroll$variable)
gradenroll <- merge(hsgrad, hsenroll, by.x = c("District.Name","Category"), by.y = c("District.Name","variable"))
gradregion <- ddply(gradenroll, .(Category), summarise,
wm = weighted.mean(X4.Year.Graduation.Rate, value, na.rm = TRUE))
ggplot(data = subset(gradregion, !(Category %in% c("All Students","American Indian")))) +
geom_point(aes(x = Category, y = wm)) +
coord_flip() +
ylim(0,100) +
theme_minimal(base_size = 14) +
labs(x = NULL, y = "Four-year graduation rate by school (2010 - 2011)")
gradregion$Category <- reorder(gradregion$Category, gradregion$wm)
ggplot(data = subset(gradregion, !(Category %in% c("American Indian")))) +
geom_point(aes(x = Category, y = wm)) +
coord_flip() +
ylim(0,100) +
theme_minimal(base_size = 14) +
labs(x = NULL, y = "Average four-year graduation rate by school (2010 - 2011)")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
appeals <- read.csv('../housingcost/appeals-list-2012.csv')
#appeals <- subset(appeals, appeals$Town %in% levels(towns$Town))
#appeals <- merge(appeals,towns, by = "Town")
appeals <- merge(appeals, subset(gh, period == 2010), by.x = "Town", by.y = "city")
appeals$Town <- reorder(appeals$Town, appeals$Percent.Affordable)
ggplot(data = appeals, aes(x = Percent.Affordable, y = Town)) +
geom_point() +
geom_vline(xintercept = 0.1) +
scale_x_continuous(labels = percent) +
theme_minimal() +
labs(x = "% affordable housing units")
ggplot(data = appeals, aes(x = Percent.Affordable, y = Town)) +
geom_point(aes(colour = Year)) +
geom_vline(xintercept = 0.1) +
scale_x_continuous(labels = percent) +
theme_minimal() +
labs(x = "% affordable housing units")
ggplot(data = appeals, aes(x = Percent.Affordable, y = Town)) +
geom_point(aes(colour = as.factor(Year))) +
geom_vline(xintercept = 0.1) +
scale_x_continuous(labels = percent) +
theme_minimal() +
labs(x = "% affordable housing units")
appeals <- read.csv('../housingcost/appeals-list-2012.csv')
appeals <- subset(appeals, appeals$Town %in% levels(towns$Town))
appeals$Town <- reorder(appeals$Town, appeals$Percent.Affordable)
ggplot(data = appeals, aes(x = Percent.Affordable, y = Town)) +
geom_point(aes(colour = as.factor(Year))) +
geom_vline(xintercept = 0.1) +
scale_x_continuous(labels = percent) +
theme_minimal() +
labs(x = "% affordable housing units")
library(classInt)
jenks <- classIntervals(appeals$Percent.Affordable,
n=4, style="fisher")
choropleth=merge(CTTowns, appeals, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
choropleth$employment=cut(choropleth$Percent.Affordable,
breaks=jenks$brks,
include.lowest=T, dig.lab = T)
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Percent.Affordable)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
theme_minimal() +
facet_grid(~ Year)
library(classInt)
jenks <- classIntervals(appeals$Percent.Affordable,
n=4, style="fisher")
choropleth=merge(CTTowns, appeals, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
choropleth$Percent.Affordable=cut(choropleth$Percent.Affordable,
breaks=jenks$brks,
include.lowest=T, dig.lab = T)
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Percent.Affordable)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "% Affordable\nHousing") +
theme_minimal() +
facet_grid(~ Year)
appeals <- merge(subset(appeals, Year == 2012),
subset(gh, period == 2010),
by.x = "Town", by.y = "city")
ggplot(data = appeals, aes(y = Percent.Affordable, x = poppovertyrate / 100)) +
#  geom_point() +
geom_text(aes(label = Town)) +
geom_abline(intercept = 0, slope = 1) +
scale_x_log10(labels = percent) +
scale_y_log10(labels = percent) +
theme_minimal() +
labs(y = "% affordable housing units (log, 2012)", x = "% living under poverty line (log, 2010)")
getwd()
setwd('../housingcost')
getwd()
slidify('index.Rmd')
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Percent.Affordable)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "% Affordable\nHousing") +
theme_minimal() +
facet_grid(~ Year)
appeals <- read.csv('../housingcost/appeals-list-2012.csv')
appeals <- subset(appeals, appeals$Town %in% levels(towns$Town))
appeals$Town <- reorder(appeals$Town, appeals$Percent.Affordable)
ggplot(data = appeals, aes(x = Percent.Affordable, y = Town)) +
geom_point(aes(colour = as.factor(Year))) +
geom_vline(xintercept = 0.1) +
scale_x_continuous(labels = percent) +
theme_minimal() +
labs(x = "% affordable housing units")
library(classInt)
jenks <- classIntervals(appeals$Percent.Affordable,
n=4, style="fisher")
choropleth=merge(CTTowns, appeals, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
choropleth$Percent.Affordable=cut(choropleth$Percent.Affordable,
breaks=jenks$brks,
include.lowest=T, dig.lab = T)
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Percent.Affordable)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "% Affordable\nHousing") +
theme_minimal() +
facet_grid(~ Year)
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Percent.Affordable)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "% Affordable\nHousing") +
theme_minimal() +
facet_wrap(~ Year, ncol = 3)
appeals <- merge(subset(appeals, Year == 2010),
subset(gh, period == 2010),
by.x = "Town", by.y = "city")
ggplot(data = appeals, aes(y = Percent.Affordable, x = poppovertyrate / 100)) +
#  geom_point() +
geom_text(aes(label = Town)) +
geom_abline(intercept = 0, slope = 1) +
scale_x_log10(labels = percent) +
scale_y_log10(labels = percent) +
theme_minimal() +
labs(y = "% affordable housing units (log, 2012)", x = "% living under poverty line (log, 2010)")
slidify('index.Rmd')
getwd()
setwd('../reviewversion')
getwd()
appeals <- merge(subset(appeals, Year == 2010),
subset(gh, period == 2010),
by.x = "Town", by.y = "city")
ggplot(data = appeals, aes(y = Percent.Affordable, x = poppovertyrate / 100)) +
#  geom_point() +
geom_text(aes(label = Town)) +
geom_abline(intercept = 0, slope = 1) +
scale_x_log10(labels = percent) +
scale_y_log10(labels = percent) +
theme_minimal() +
labs(y = "% affordable housing units (log, 2012)", x = "% living under poverty line (log, 2010)")
appeals <- merge(subset(appeals, Year == 2010),
subset(gh, period == 2010),
by.x = "Town", by.y = "city")
ggplot(data = appeals, aes(y = Percent.Affordable, x = poppovertyrate / 100)) +
#  geom_point() +
geom_text(aes(label = Town)) +
geom_abline(intercept = 0, slope = 1) +
scale_x_log10(labels = percent) +
scale_y_log10(labels = percent) +
theme_minimal() +
labs(y = "% affordable housing units (log, 2012)", x = "% living under poverty line (log, 2010)")
subset(appeals, Year == 2010)
getwd()
slidify('index.Rmd')
getwd()
slidify('index.Rmd')
totalcrime <- read.csv("../crime/totalcrime.csv")
totalcrime <- subset(totalcrime, totalcrime$Town %in% levels(towns$Town))
totalcrime$Town <- factor(totalcrime$Town)
totalcrime_avg <- ddply(subset(totalcrime, Year > 2005), .(Town), summarise,
Total.crime.Rate = weighted.mean(Total.crime.Rate, Total.estimated.population..Number, na.rm = TRUE))
library(classInt)
jenks <- classIntervals(totalcrime_avg$Total.crime.Rate,
n=3, style="fisher")
choropleth=merge(CTTowns, totalcrime_avg, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
choropleth$Total.crime.Rate= cut(choropleth$Total.crime.Rate,
breaks=jenks$brks,
include.lowest=T, dig.lab = T)
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Total.crime.Rate)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "Total crime\nrate") +
theme_minimal(base_size = 16)
library(classInt)
jenks <- classIntervals(appeals$Percent.Affordable,
n=4, style="fisher")
choropleth=merge(CTTowns, appeals, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
choropleth$Percent.Affordable=cut(choropleth$Percent.Affordable,
breaks=jenks$brks,
include.lowest=T, dig.lab = T)
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Percent.Affordable)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "% Affordable\nHousing") +
theme_minimal()
appeals <- read.csv('../housingcost/appeals-list-2012.csv')
appeals <- subset(appeals, appeals$Town %in% levels(towns$Town) & Year == 2012)
library(classInt)
jenks <- classIntervals(appeals$Percent.Affordable,
n=4, style="fisher")
choropleth=merge(CTTowns, appeals, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
choropleth$Percent.Affordable=cut(choropleth$Percent.Affordable,
breaks=jenks$brks,
include.lowest=T, dig.lab = T)
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Percent.Affordable)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "% Affordable\nHousing") +
theme_minimal()
slidify('index.Rmd')
appeals <- read.csv('../housingcost/appeals-list-2012.csv')
appeals <- subset(appeals, appeals$Town %in% levels(towns$Town))
#appeals <- merge(appeals,towns, by = "Town")
#appeals <- merge(appeals, subset(gh, period == 2010), by.x = "Town", by.y = "city")
appeals$Town <- reorder(appeals$Town, appeals$Percent.Affordable)
ggplot(data = appeals, aes(x = Percent.Affordable, y = Town)) +
geom_point(aes(colour = as.factor(Year))) +
geom_vline(xintercept = 0.1) +
scale_x_continuous(labels = percent) +
theme_minimal() +
labs(x = "% affordable housing units")
library(classInt)
jenks <- classIntervals(appeals$Percent.Affordable,
n=4, style="fisher")
choropleth=merge(CTTowns, appeals, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
choropleth$Percent.Affordable=cut(choropleth$Percent.Affordable,
breaks=jenks$brks,
include.lowest=T, dig.lab = T)
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Percent.Affordable)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "% Affordable\nHousing") +
theme_minimal() +
facet_wrap(~ Year, ncol = 3)
appeals <- merge(subset(appeals, Year == 2012),
subset(gh, period == 2010),
by.x = "Town", by.y = "city")
ggplot(data = appeals, aes(y = Percent.Affordable, x = poppovertyrate / 100)) +
#  geom_point() +
geom_text(aes(label = Town)) +
geom_abline(intercept = 0, slope = 1) +
scale_x_log10(labels = percent) +
scale_y_log10(labels = percent) +
theme_minimal() +
labs(y = "% affordable housing units (log, 2012)", x = "% living under poverty line (log, 2010)")
getwd()
setwd('../housingcost')
getwd()
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
getwd()
setwd('../reviewversion')
getwd()
ggplot(data = cmt_subgroups_region, aes(x = School.Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status)) +
#  geom_point(aes(group = Status)) +
facet_wrap(~ Subgroup, ncol = 5) +
scale_x_discrete(breaks = c("2006-07","2008-09","2010-11")) +
theme_minimal(base_size = 16) +
labs(x = "School Year", y = "Average scale score, 3rd grade reading")
gradregion
ggplot(data = subset(gradregion, !(Category %in% c("American Indian")))) +
geom_point(aes(x = Category, y = wm)) +
coord_flip() +
ylim(0,100) +
theme_minimal(base_size = 16) +
geom_vline(xintercept = 82.18249) +
labs(x = NULL, y = "Average four-year graduation rate by major subgroup (2003 - 2011)")
ggplot(data = subset(gradregion, !(Category %in% c("American Indian")))) +
geom_point(aes(x = Category, y = wm)) +
coord_flip() +
ylim(0,100) +
theme_minimal(base_size = 16) +
geom_hline(yintercept = 82.18249) +
labs(x = NULL, y = "Average four-year graduation rate by major subgroup (2003 - 2011)")
ggplot(data = subset(gradregion, !(Category %in% c("American Indian")))) +
geom_point(aes(x = Category, y = wm)) +
coord_flip() +
ylim(0,100) +
theme_minimal(base_size = 16) +
geom_hline(yintercept = 82.18249, alpha = 0.5) +
labs(x = NULL, y = "Average four-year graduation rate by major subgroup (2003 - 2011)")
names(towns)
towns <- read.csv("../regionalreport/data/hartford-towns.csv")
choropleth=merge(CTTowns, towns, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Towngroup)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "% registered voters\nthat voted") +
theme_minimal(base_size = 16)
getwd()
slidify('index.Rmd')
ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value)),
aes(x = YEAR, y = value)
ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value))
ddply(merge(subset(enroll, variable == "Total"), towns,
by.x = "Resident.Town",by.y = "Town"),
.(Towngroup, School.Type, School.Year),summarise, x = sum(x))
slidify('index.Rmd')
subset(gradregion, !(Category %in% c("American Indian")))
write.csv(subset(gradregion, !(Category %in% c("American Indian"))),"slide13.csv",
row.names = FALSE)
write.csv(subset(otm, ratio > 0.05 & !(Destination == "All Other Locations")),
"slide9.csv", row.names = FALSE)
otm <- read.csv("../regionalreport/data/otmdata.csv")
#Then clear up the names for prettier formatting
otm$Destination <- gsub(pattern = " (town|borough) \\(([A-z]|[^A-z])+,[ \t\n\r\f\v][A-Z]+\\)",
replacement = "", otm$Destination)
otm$Starting.point <- gsub(pattern = " (town|borough) \\(([A-z]|[^A-z])+,[ \t\n\r\f\v][A-Z]+\\)",
replacement = "", otm$Starting.point)
#Add the ratio of workers for each starting point town
sum <- tapply(otm$Number, otm$Starting.point, sum)
otm$ratio <- otm$Number / sum[otm$Starting.point]
write.csv(subset(otm, ratio > 0.05 & !(Destination == "All Other Locations")),
"slide9.csv", row.names = FALSE)
