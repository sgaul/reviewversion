library(reshape)
utils:::menuInstallPkgs()
library(reshape)
q()
install.packages(c("acs", "mapproj"))
install.packages(c("png", "yaml"))
getwd()
setwd('C:/Users/scott/Documents/R/regionalreport/reviewversion')
getwd()
require(slidify)
library(ggplot2)
library(reshape)
towns <- read.csv("../regionalreport/data/hartford-towns.csv")
CTTowns <- readShapeSpatial(fn="../townshp/wgs84/townct_37800_0000_2010_s100_census_1_shp_wgs84")
#Fortify and order the CTTowns to allow ggmap to use that
CTTowns <- fortify(CTTowns, region = "NAME10")
#Merge map and data
choropleth=merge(CTTowns, towns, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Towngroup)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "Types of towns") +
theme_minimal(base_size = 16)
library(maps)
library(ggplot2)
library(reshape)
library(maps)
towns <- read.csv("../regionalreport/data/hartford-towns.csv")
CTTowns <- readShapeSpatial(fn="../townshp/wgs84/townct_37800_0000_2010_s100_census_1_shp_wgs84")
#Fortify and order the CTTowns to allow ggmap to use that
CTTowns <- fortify(CTTowns, region = "NAME10")
#Merge map and data
choropleth=merge(CTTowns, towns, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Towngroup)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "Types of towns") +
theme_minimal(base_size = 16)
library(ggplot2)
library(reshape)
library(scales)
library(acs)
library(maps)
library(maptools)
towns <- read.csv("../regionalreport/data/hartford-towns.csv")
CTTowns <- readShapeSpatial(fn="../townshp/wgs84/townct_37800_0000_2010_s100_census_1_shp_wgs84")
#Fortify and order the CTTowns to allow ggmap to use that
CTTowns <- fortify(CTTowns, region = "NAME10")
#Merge map and data
choropleth=merge(CTTowns, towns, by.x = "id", by.y="Town")
choropleth=choropleth[order(choropleth$order), ]
#Make the map
ggplot(data = choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = Towngroup)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = NULL, y = NULL) +
coord_equal() +
geom_polygon(data = CTTowns, colour = "grey", alpha = 0.5, fill = NA) +
scale_fill_brewer(palette = "Purples", name = "Types of towns") +
theme_minimal(base_size = 16)
slidify('index.Rmd')
ggplot(data = subset(cmt_subgroups_region, Category == "ELL"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = 217) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
ylim(180,275) +
theme_minimal() +
labs(x = NULL, y = "Average scale score, 3rd grade reading")
ggplot(data = subset(cmt_subgroups_region, Category == "ELL"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = 217) +
scale_x_continuous(breaks = c(2006,2009,2012), size = 1, alpha = 0.1) +
ylim(180,275) +
theme_minimal() +
labs(x = NULL, y = "Average scale score, 3rd grade reading")
ggplot(data = subset(cmt_subgroups_region, Category == "ELL"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = 217, size = 1, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
ylim(180,275) +
theme_minimal() +
labs(x = NULL, y = "Average scale score, 3rd grade reading")
ggplot(data = subset(cmt_subgroups_region, Category == "ELL"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
geom_hline(yintercept = 217, size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
ylim(180,275) +
theme_minimal() +
labs(x = NULL, y = "Average scale score, 3rd grade reading")
ggplot(data = subset(cmt_subgroups_region, Category == "ELL"),
aes(x = Year, y = Average.Scale.Score)) +
geom_line(aes(group = Status, colour = Status), size = 1) +
annotate("text", label = "Proficient", x = 2012, y = 218) +
geom_hline(yintercept = 217, size = 2, alpha = 0.1) +
scale_x_continuous(breaks = c(2006,2009,2012)) +
ylim(180,275) +
theme_minimal() +
labs(x = NULL, y = "Average scale score, 3rd grade reading")
slidify('index.Rmd')
as.table(subset(jobgrowth, growth < -.1 & X2013 > 5000)[1])
table(subset(jobgrowth, growth < -.1 & X2013 > 5000)[1])
subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% table(subset(jobgrowth, growth < -.1 & X2013 > 5000)[1]))
table(subset(jobgrowth, growth < -.1 & X2013 > 5000)[1])
as.data.frame(subset(jobgrowth, growth < -.1 & X2013 > 5000)[1])
subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% as.data.frame(subset(jobgrowth, growth < -.1 & X2013 > 5000)[1]))
subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% as.data.frame(subset(jobgrowth, growth < -.1 & X2013 > 5000)[1])
sectortitle %in% as.data.frame(subset(jobgrowth, growth < -.1 & X2013 > 5000)[1])
subset(jobgrowth, growth < -.1 & X2013 > 5000)[1])
subset(qcew,
series == "Employees" &
area == "North Central" &
sectortitle %in% as.data.frame(subset(jobgrowth, growth < -.1 & X2013 > 5000)[1]))
subset(qcew,
series == "Employees" &
area == "North Central" &
sectortitle %in% as.data.frame(subset(jobgrowth, growth < -.1 & X2013 > 5000))[1])
as.data.frame(subset(jobgrowth, growth < -.1 & X2013 > 5000))[1]
data.frame(subset(jobgrowth, growth < -.1 & X2013 > 5000))[1]
subset(qcew,
series == "Employees" &
area == "North Central" &
sectortitle %in% data.frame(subset(jobgrowth, growth < -.1 & X2013 > 5000))[1])
subset(qcew, sectortitle %in% data.frame(subset(jobgrowth, growth < -.1))[1])
subset(jobgrowth, growth < -.1))
subset(jobgrowth, growth < -.1)
subset(qcew, sectortitle %in% data.frame(subset(jobgrowth, growth < -.1)[1]))
subset(qcew, sectortitle %in% as.list(subset(jobgrowth, growth < -.1)[1]))
subset(qcew, sectortitle %in% as.array(subset(jobgrowth, growth < -.1)[1]))
subset(qcew, sectortitle %in% array(subset(jobgrowth, growth < -.1)[1]))
subset(qcew, sectortitle %in% list(subset(jobgrowth, growth < -.1)[1]))
subset(qcew, sectortitle %in% subset(jobgrowth, growth < -.1))
subset(qcew, sectortitle %in% subset(jobgrowth, growth < -.1)$sectortitle)
subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% as.data.frame(subset(jobgrowth, growth < -.1 & X2013 > 5000)$sectortitle))
subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% subset(jobgrowth, growth < -.1 & X2013 > 5000)$sectortitle)
ggplot(data = subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% subset(jobgrowth,
growth < -.1 &
X2013 > 5000)$sectortitle),
aes(y = value, x = year)) +
geom_line(aes(group = area)) +
theme_minimal(base_size = 16) +
labs(y = "Number of employees", y = NULL) +
scale_y_continuous(labels = comma) +
facet_wrap(~ sectortitle, ncol = 4)
write.csv(subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% subset(jobgrowth, X2013 > 5000)$sectortitle)),
"../rawdata/jobgrowth.csv", row.names = FALSE)
write.csv(subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% subset(jobgrowth, X2013 > 5000)$sectortitle),
"../rawdata/jobgrowth.csv", row.names = FALSE)
rising <-
ggplot(data = subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% subset(jobgrowth,
growth > .1 &
X2013 > 5000)$sectortitle),
aes(y = value, x = year)) +
geom_line(aes(group = area)) +
theme_minimal(base_size = 16) +
labs(y = "Number of employees", y = NULL) +
scale_y_continuous(labels = comma) +
facet_wrap(~ sectortitle, ncol = 4)
stable <-
ggplot(data = subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% subset(jobgrowth,
growth <= .1 & growth >= -.1 &
X2013 > 5000)$sectortitle),
aes(y = value, x = year)) +
geom_line(aes(group = area)) +
theme_minimal(base_size = 16) +
labs(y = "Number of employees", y = NULL) +
scale_y_continuous(labels = comma) +
facet_wrap(~ sectortitle, ncol = 4)
falling <-
ggplot(data = subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% subset(jobgrowth,
growth < -.1 &
X2013 > 5000)$sectortitle),
aes(y = value, x = year)) +
geom_line(aes(group = area)) +
theme_minimal(base_size = 16) +
labs(y = "Number of employees", y = NULL) +
scale_y_continuous(labels = comma) +
facet_wrap(~ sectortitle, ncol = 4)
library(gridExtra)
grid.arrange(rising, stable, falling, nrow = 1, ncol = 3)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
unique(qcew$year)
ggplot(data = subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% subset(jobgrowth,
growth < -.1 &
X2013 > 10000)$sectortitle),
aes(y = value, x = year)) +
geom_line(aes(group = area)) +
theme_minimal(base_size = 16) +
labs(y = "Number of employees", y = NULL) +
scale_x_continuous(breaks = c(2003,2008,2013)) +
scale_y_continuous(labels = comma, lim = c(10000,100000)) +
facet_wrap(~ sectortitle, ncol = 4)
ggplot(data = subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% subset(jobgrowth,
growth < -.1 &
X2013 > 10000)$sectortitle),
aes(y = value, x = year)) +
geom_line(aes(group = area)) +
theme_minimal(base_size = 16) +
labs(y = "Number of employees", y = NULL) +
scale_x_continuous(breaks = c(1993,2003,2013)) +
scale_y_continuous(labels = comma, lim = c(10000,100000)) +
facet_wrap(~ sectortitle, ncol = 4)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
write.csv(hsgrad_agg, "../rawdata/hsgraduation.csv", row.names = FALSE)
write.csv(towns,"../rawdata/towns.csv", row.names = FALSE)
write.csv(subset(gh_test, period >= 1900),"../rawdata/population.csv", row.names = FALSE)
write.csv(subset(gh_sum,period >= 1970),"../rawdata/poverty.csv", row.names = FALSE)
write.csv(ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value)),
"../rawdata/aging.csv", row.names = F)
write.csv(ddply(merge(subset(enroll, variable == "Total"), towns,
by.x = "Resident.Town",by.y = "Town"),
.(Towngroup, School.Type, School.Year),summarise, x = sum(x)),
"../rawdata/enrollment.csv", row.names = FALSE)
write.csv(languages,"../rawdata/languages.csv", row.names = F)
write.csv(subset(otm, ratio > 0.05 & !(Destination == "All Other Locations")),
"../rawdata/commuting.csv", row.names = FALSE)
write.csv(attainment.by.race,"../rawdata/attainment.csv", row.names = FALSE)
write.csv(subset(qcew, series == "Employees" &
area == "North Central" &
sectortitle %in% subset(jobgrowth, X2013 > 10000)$sectortitle),
"../rawdata/jobgrowth.csv", row.names = FALSE)
write.csv(hsgrad_agg, "../rawdata/hsgraduation.csv", row.names = FALSE)
write.csv(cmt_subgroups_region,"../rawdata/3rdgradereading.csv", row.names = FALSE)
write.csv(ddply(merge(homeownership, towns,by = "Town"),.(Towngroup), summarise,
rate = weighted.mean(rate,
number,
na.rm = TRUE)),
"../rawdata/homeownership.csv", row.names = FALSE)
write.csv(ddply(merge(appeals, towns,by = "Town"),.(Towngroup), summarise,
Percent.Affordable =
weighted.mean(Percent.Affordable,
Total.housing.units...2010.census, na.rm = TRUE)),
"../rawdata/affordablehousing.csv",row.names = FALSE)
write.csv(ddply(merge(subset(totalcrime, Year > 2008),
towns,by = "Town"),.(Towngroup), summarise,
Total.crime.Rate =
weighted.mean(Total.crime.Rate,
Total.estimated.population..Number, na.rm = TRUE)),
"../rawdata/crime.csv",row.names = FALSE)
ddply(merge(appeals,towns,by = "Town"),
.(Towngroup, Year), summarise,
Percent.Affordable =
weighted.mean(Percent.Affordable,
Total.housing.units...2010.census, na.rm = TRUE))
write.csv(ddply(merge(appeals,towns,by = "Town"),
.(Towngroup, Year), summarise,
Percent.Affordable =
weighted.mean(Percent.Affordable,
Total.housing.units...2010.census, na.rm = TRUE)),
row.names = FALSE)
write.csv(ddply(merge(appeals,towns,by = "Town"),
.(Towngroup, Year), summarise,
Percent.Affordable =
weighted.mean(Percent.Affordable,
Total.housing.units...2010.census, na.rm = TRUE)),
row.names = FALSE)
write.csv(ddply(merge(appeals,towns,by = "Town"),
.(Towngroup, Year), summarise,
Percent.Affordable =
weighted.mean(Percent.Affordable,
Total.housing.units...2010.census, na.rm = TRUE)),
"../rawdata/affordablehousing.csv",row.names = FALSE)
write.csv(ddply(merge(subset(totalcrime[!is.na(totalcrime$Total.crime.Rate),]),
towns,by = "Town"),
.(Towngroup, Year), summarise,
Total.crime.Rate =
weighted.mean(Total.crime.Rate,
Total.estimated.population..Number, na.rm = TRUE)),
"../rawdata/crime.csv",row.names = FALSE)
write.csv(ddply(merge(subset(voting, Type == "Municipal"),towns,by = "Town"),
.(Towngroup, Year), summarise,
Percentage.Checked.as.Having.Voted =
weighted.mean(Percentage.Checked.as.Having.Voted,
Names.on.Official.Check.List..Active.,na.rm = TRUE)),
"../rawdata/voterturnout.csv",row.names = FALSE)
slidify('index.Rmd')
