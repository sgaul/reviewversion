library(reshape)
utils:::menuInstallPkgs()
library(reshape)
q()
getwd()
setwd('R/regionalreport/reviewversion')
getwd()
ls
getwd()
require(slidify)
library(devtools)
install_github('slidify','ramnathv', ref = 'dev')
install_github('slidifyLibraries','ramnathv', ref = 'dev')
install_github('rCharts','ramnathv', ref = 'dev')
install.packages(c("devtools", "digest", "e1071", "mapproj", "png", "yaml"))
install.packages(c("devtools", "digest", "e1071", "mapproj",
install.packages(c("devtools", "digest", "e1071"))
install.packages(c("mapproj", "png", "yaml"))
install.packages(c("mapproj", "png", "yaml"))
install.packages(c("mapproj", "png", "yaml"))
install.packages(c("mapproj", "png", "yaml"))
install.packages(c("mapproj", "png", "yaml"))
install.packages(c("mapproj", "png", "yaml"))
install.packages("yaml")
install.packages("yaml")
install.packages("yaml")
library(ggplot2)
library(scales)
library(reshape)
projections <- read.csv('sdc-projections.csv')
projections <- subset(projections, projections$TOWN %in% levels(towns$Town))
projections$TOWN <- factor(projections$TOWN)
projections$YEAR <- paste("20",projections$YEAR, sep = "")
projections <- merge(projections, towns, by.x = "TOWN", by.y = "Town")
levels(projections$AGE) <- list(
"55 years and over" = c("8084","6064","7579","5559","90OV","7074","8589","6569"),
"25 to 54 years" = c("4549","2529","4044","3539","5054","3034"),
"16 to 24 years" = c("2024","1519"),
"0 to 16 years" = c("0004","0509","1014"))
#projections$TYPE = ifelse(projections$TOWN == "Hartford","Hartford","Other region")
#aging <- ddply(projections, .(YEAR, AGE, GENDER, TYPE), summarise, sum = sum(value))
#aging <- cast(aging, TYPE + YEAR + AGE ~ GENDER)
#levels(aging$AGE) <- rev(levels(aging$AGE))
projections$AGE <- factor(projections$AGE, levels = c("0 to 16 years",
"16 to 24 years",
"25 to 54 years",
"55 years and over"))
ggplot(data = ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value)),
aes(x = AGE, y = value)) +
geom_freqpoly(stat = 'identity', aes(group = as.factor(YEAR), color = as.factor(YEAR))) +
facet_wrap(~ Towngroup, ncol = 4) +
scale_colour_brewer(name = "Year") +
scale_y_continuous(labels = comma) +
labs(y = "Projected population", x = "Age group") +
theme_minimal()
towns <- read.csv("../regionalreport/data/hartford-towns.csv")
library(ggplot2)
library(scales)
library(reshape)
projections <- read.csv('sdc-projections.csv')
projections <- subset(projections, projections$TOWN %in% levels(towns$Town))
projections$TOWN <- factor(projections$TOWN)
projections$YEAR <- paste("20",projections$YEAR, sep = "")
projections <- merge(projections, towns, by.x = "TOWN", by.y = "Town")
levels(projections$AGE) <- list(
"55 years and over" = c("8084","6064","7579","5559","90OV","7074","8589","6569"),
"25 to 54 years" = c("4549","2529","4044","3539","5054","3034"),
"16 to 24 years" = c("2024","1519"),
"0 to 16 years" = c("0004","0509","1014"))
#projections$TYPE = ifelse(projections$TOWN == "Hartford","Hartford","Other region")
#aging <- ddply(projections, .(YEAR, AGE, GENDER, TYPE), summarise, sum = sum(value))
#aging <- cast(aging, TYPE + YEAR + AGE ~ GENDER)
#levels(aging$AGE) <- rev(levels(aging$AGE))
projections$AGE <- factor(projections$AGE, levels = c("0 to 16 years",
"16 to 24 years",
"25 to 54 years",
"55 years and over"))
ggplot(data = ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value)),
aes(x = AGE, y = value)) +
geom_freqpoly(stat = 'identity', aes(group = as.factor(YEAR), color = as.factor(YEAR))) +
facet_wrap(~ Towngroup, ncol = 4) +
scale_colour_brewer(name = "Year") +
scale_y_continuous(labels = comma) +
labs(y = "Projected population", x = "Age group") +
theme_minimal()
ggplot(data =
ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value)),
aes(x = AGE, y = value)) +
geom_bar(stat = 'identity', aes(group = as.factor(YEAR), fill = as.factor(YEAR))) +
#  geom_freqpoly(stat = 'identity', aes(group = as.factor(YEAR), color = as.factor(YEAR))) +
facet_wrap(~ Towngroup, ncol = 4) +
scale_colour_brewer(name = "Year") +
scale_y_continuous(labels = comma) +
labs(y = "Projected population", x = "Age group") +
theme_minimal()
ggplot(data =
ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value)),
aes(x = YEAR, y = value)) +
geom_bar(stat = 'identity', aes(group = AGE, fill = AGE)) +
facet_wrap(~ Towngroup, ncol = 4) +
scale_colour_brewer(name = "Year") +
scale_y_continuous(labels = comma) +
labs(y = "Projected population", x = "Age group") +
theme_minimal()
ggplot(data =
ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value)),
aes(x = YEAR, y = value)) +
geom_bar(stat = 'identity', position = 'stack', aes(group = AGE, fill = AGE)) +
facet_wrap(~ Towngroup, ncol = 4) +
scale_colour_brewer(name = "Year") +
scale_y_continuous(labels = comma) +
labs(y = "Projected population", x = "Age group") +
theme_minimal()
ggplot(data =
ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value)),
aes(x = YEAR, y = value)) +
geom_bar(stat = 'identity', position = 'fill', aes(group = AGE, fill = AGE)) +
facet_wrap(~ Towngroup, ncol = 4) +
scale_colour_brewer(name = "Year") +
scale_y_continuous(labels = comma) +
labs(y = "Projected population", x = "Age group") +
theme_minimal()
ggplot(data =
ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value)),
aes(x = YEAR, y = value)) +
geom_bar(stat = 'identity', position = 'fill', aes(group = AGE, fill = AGE)) +
facet_wrap(~ Towngroup, ncol = 4) +
scale_fill_brewer(name = "Year") +
scale_y_continuous(labels = percent) +
labs(y = "Share of projected population", x = "Age group") +
theme_minimal()
ggplot(data =
ddply(projections, .(YEAR, AGE, Towngroup), summarise, value = sum(value)),
aes(x = YEAR, y = value)) +
geom_bar(stat = 'identity', position = 'fill', aes(group = AGE, fill = AGE)) +
facet_wrap(~ Towngroup, ncol = 4) +
scale_fill_brewer(name = "Age") +
scale_y_continuous(labels = percent) +
labs(y = "Share of projected population", x = "Age group") +
theme_minimal()
require(slidify)
getwd()
slidify('index.Rmd')
require(rCharts)
merge(gh,towns, by.x = "city", by.y = "Town")
gh <- merge(gh,towns, by.x = "city", by.y = "Town")
gh_sum <- ddply(gh,.(Towngroup, period), summarise, population = sum(population), population.under.poverty = sum(poppoverty))
ggplot(aes(y = population.under.poverty,
x = period), data = subset(gh_sum,period >= 1970)) +
geom_line(aes(group = Towngroup, colour = Towngroup)) +
scale_y_continuous(labels = comma, limits = c(0,41000)) +
labs(x = "Year", y = 'Population', title = 'Population in poverty') +
theme_minimal()
tracts <- read.csv("../mockup/tracts.csv")
tracts <- merge(tracts, towns, by = "Town")
ggplot(data = income.tract) +
geom_dotplot(aes(x = income, fill = Towngroup),
stackgroups = TRUE, binpositions = "all", binwidth = 5700) +
scale_fill_brewer(name = "Type of town") +
scale_x_continuous(labels = comma) +
scale_y_continuous(name = "", breaks = NULL) +
labs(x = "Neighborhood household income levels") +
theme_minimal()
income.tract <- merge(income.tract, tracts, by = "tract")
ggplot(data = income.tract) +
geom_dotplot(aes(x = income, fill = Towngroup),
stackgroups = TRUE, binpositions = "all", binwidth = 5700) +
scale_fill_brewer(name = "Type of town") +
scale_x_continuous(labels = comma) +
scale_y_continuous(name = "", breaks = NULL) +
labs(x = "Neighborhood household income levels") +
theme_minimal()
names(tracts)
income.tract <- merge(income.tract, tracts, by = "tract")
names(income.tract)
income.tract = data.frame(tract=geography(B19013)[,1],
income.estimate = estimate(B19013[,1]),
se=standard.error(B19013[,1]))
names(income.tract) <- c("tract","income","se")
income.tract$tract= gsub("Census Tract ", "", income.tract$tract)
income.tract$tract= gsub(", Tolland County, Connecticut", "", income.tract$tract)
income.tract$tract= gsub(", Hartford County, Connecticut", "", income.tract$tract)
tracts <- read.csv("../mockup/tracts.csv")
tracts <- merge(tracts, towns, by = "Town")
income.tract <- merge(income.tract, tracts, by = "tract")
names(income.tract)
ggplot(data = income.tract) +
geom_dotplot(aes(x = income, fill = Towngroup),
stackgroups = TRUE, binpositions = "all", binwidth = 5700) +
scale_fill_brewer(name = "Type of town") +
scale_x_continuous(labels = comma) +
scale_y_continuous(name = "", breaks = NULL) +
labs(x = "Neighborhood household income levels") +
theme_minimal()
tracts <- read.csv("../mockup/tracts.csv")
tracts <- merge(tracts, towns, by = "Town")
homeownership.tract <- merge(homeownership.tract, tracts, by = "tract")
names(homeownership.tract)
hartford.tracts = geo.make(state = "CT", county = c("Hartford","Tolland"), tract = "*", check = F)
B25008 = acs.fetch(geography = hartford.tracts, table.number = "B25008", col.names = "pretty")
own.estimate = divide.acs(numerator=B25008[,2],denominator=B25008[,1], method = 'proportion')
homeownership.tract = data.frame(tract=geography(B25008)[[1]],
rate=as.numeric(estimate(own.estimate)),
se=standard.error(own.estimate))
names(homeownership.tract) <- c("tract","rate","se")
homeownership.tract$tract= gsub("Census Tract ", "", homeownership.tract$tract)
homeownership.tract$tract= gsub(", Tolland County, Connecticut", "",
homeownership.tract$tract)
homeownership.tract$tract= gsub(", Hartford County, Connecticut", "",
homeownership.tract$tract)
tracts <- read.csv("../mockup/tracts.csv")
tracts <- merge(tracts, towns, by = "Town")
names(homeownership.tract)
homeownership.tract <- merge(homeownership.tract, tracts, by = "tract")
names(homeownership.tract)
ggplot(data = homeownership.tract) +
geom_dotplot(aes(x = rate, fill = Towngroup, colour = Towngroup),
binwidth  = .03, stackgroups = TRUE, binpositions = "all") +
scale_x_continuous(labels = percent) +
scale_y_continuous(name = "", breaks = NULL) +
labs(x = "% living in owner-occupied units by neighborhood") +
theme_minimal()
slidify('index.Rmd')
getwd()
require(slidify)
slidify('index.Rmd')
install_github('slidify','ramnathv', ref = 'dev')
library(devtools)
install_github('slidify','ramnathv', ref = 'dev')
require(slidify)
library(slidify)
library(foo)
require(foo)
slidify('index.Rmd')
slidify('index.Rmd')
